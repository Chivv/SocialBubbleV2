#!/bin/bash

echo "🧹 Removing node_modules from Git history..."

# Remove node_modules from the repository
git rm -r --cached node_modules

# Add node_modules to .gitignore if not already there
if ! grep -q "node_modules" .gitignore; then
    echo "node_modules/" >> .gitignore
fi

# Also add other commonly ignored files
cat >> .gitignore << 'EOL'

# Dependencies
/node_modules
/.pnp
.pnp.js

# Testing
/coverage

# Next.js
/.next/
/out/

# Production
/build

# Misc
.DS_Store
*.pem

# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Local env files
.env*.local
.env.local
.env.development.local
.env.test.local
.env.production.local

# Vercel
.vercel

# TypeScript
*.tsbuildinfo
next-env.d.ts

# IDE
.idea
.vscode
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Lock files (keep package-lock.json)
yarn.lock
pnpm-lock.yaml
EOL

# Commit the changes
git add .gitignore
git commit -m "Add comprehensive .gitignore and remove node_modules from tracking"

echo "✅ node_modules removed from tracking and .gitignore updated"
echo ""
echo "⚠️  WARNING: The large file is still in your Git history."
echo "To completely remove it from history and reduce repository size, run:"
echo ""
echo "git filter-branch --force --index-filter 'git rm -rf --cached --ignore-unmatch node_modules' --prune-empty --tag-name-filter cat -- --all"
echo ""
echo "Or use the newer git filter-repo (recommended):"
echo "pip3 install git-filter-repo"
echo "git filter-repo --path node_modules --invert-paths"
echo ""
echo "After cleaning history, force push with:"
echo "git push origin main --force"